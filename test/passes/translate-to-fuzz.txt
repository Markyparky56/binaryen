(module
 (type $FUNCSIG$j (func (result i64)))
 (type $FUNCSIG$i (func (result i32)))
 (type $FUNCSIG$vff (func (param f32 f32)))
 (type $FUNCSIG$fj (func (param i64) (result f32)))
 (global $hangLimit (mut i32) (i32.const 100))
 (table 9 9 anyfunc)
 (elem (i32.const 0) $func_1 $func_1 $func_1 $func_1 $func_3 $func_3 $func_3 $func_3 $func_3)
 (memory $0 (shared 1 1))
 (data (i32.const 0) "\00C\00[\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (export "func_0" (func $func_0))
 (export "func_4" (func $func_4))
 (export "hangLimitInitializer" (func $hangLimitInitializer))
 (func $func_0 (type $FUNCSIG$j) (result i64)
  (local $0 i32)
  (local $1 f64)
  (block
   (if
    (i32.eqz
     (get_global $hangLimit)
    )
    (return
     (i64.const 1024)
    )
   )
   (set_global $hangLimit
    (i32.sub
     (get_global $hangLimit)
     (i32.const 1)
    )
   )
  )
  (block $label$0 (result i64)
   (nop)
   (return
    (i64.const 386994477)
   )
  )
 )
 (func $func_1 (type $FUNCSIG$i) (result i32)
  (local $0 f64)
  (block
   (if
    (i32.eqz
     (get_global $hangLimit)
    )
    (return
     (i32.const 942701876)
    )
   )
   (set_global $hangLimit
    (i32.sub
     (get_global $hangLimit)
     (i32.const 1)
    )
   )
  )
  (block $label$0 (result i32)
   (set_local $0
    (get_local $0)
   )
   (return
    (i32.const 9282)
   )
  )
 )
 (func $func_2 (result i32)
  (local $0 f32)
  (local $1 f64)
  (local $2 f64)
  (block
   (if
    (i32.eqz
     (get_global $hangLimit)
    )
    (return
     (i32.const 269093727)
    )
   )
   (set_global $hangLimit
    (i32.sub
     (get_global $hangLimit)
     (i32.const 1)
    )
   )
  )
  (block $label$0 (result i32)
   (if
    (i32.const 274205712)
    (block $label$1
     (drop
      (f32.load offset=4 align=1
       (i32.const 842759483)
      )
     )
     (nop)
    )
    (nop)
   )
   (nop)
   (f32.gt
    (f32.load offset=2
     (i32.and
      (call $func_1)
      (i32.const 31)
     )
    )
    (f32.load offset=4 align=2
     (i32.and
      (i32.wrap/i64
       (select
        (i64.atomic.rmw.and offset=22
         (i32.and
          (call_indirect $FUNCSIG$i
           (i32.const 2)
          )
          (i32.const 31)
         )
         (i64.const 36028797018963968)
        )
        (call $func_0)
        (i32.atomic.rmw8_u.cmpxchg offset=4
         (i32.and
          (if (result i32)
           (i32.eqz
            (block $label$3 (result i32)
             (block $label$4
              (block $label$5
               (if
                (i32.eqz
                 (i32.const 1515671579)
                )
                (block $label$6
                 (loop $label$7
                  (block
                   (if
                    (i32.eqz
                     (get_global $hangLimit)
                    )
                    (return
                     (i32.const -32768)
                    )
                   )
                   (set_global $hangLimit
                    (i32.sub
                     (get_global $hangLimit)
                     (i32.const 1)
                    )
                   )
                  )
                  (drop
                   (loop $label$8 (result f32)
                    (block
                     (if
                      (i32.eqz
                       (get_global $hangLimit)
                      )
                      (return
                       (i32.const -107)
                      )
                     )
                     (set_global $hangLimit
                      (i32.sub
                       (get_global $hangLimit)
                       (i32.const 1)
                      )
                     )
                    )
                    (block (result f32)
                     (set_local $2
                      (get_local $1)
                     )
                     (br_if $label$8
                      (i32.eqz
                       (i32.const 1263290954)
                      )
                     )
                     (get_local $0)
                    )
                   )
                  )
                 )
                 (set_local $2
                  (get_local $2)
                 )
                )
                (loop $label$9
                 (block
                  (if
                   (i32.eqz
                    (get_global $hangLimit)
                   )
                   (return
                    (i32.const -1)
                   )
                  )
                  (set_global $hangLimit
                   (i32.sub
                    (get_global $hangLimit)
                    (i32.const 1)
                   )
                  )
                 )
                 (block
                  (set_local $1
                   (f64.const 82)
                  )
                  (br_if $label$9
                   (i32.const 1073741824)
                  )
                  (f64.store offset=22
                   (i32.and
                    (i32.const 16)
                    (i32.const 31)
                   )
                   (get_local $1)
                  )
                 )
                )
               )
               (set_local $0
                (if (result f32)
                 (i32.const -1)
                 (get_local $0)
                 (f32.const 4.5111519284546375e-05)
                )
               )
              )
             )
             (call_indirect $FUNCSIG$i
              (i32.const 3)
             )
            )
           )
           (if (result i32)
            (i32.eqz
             (i32.const 18199)
            )
            (block $label$10 (result i32)
             (nop)
             (call_indirect $FUNCSIG$i
              (block $label$11 (result i32)
               (nop)
               (loop $label$12 (result i32)
                (block
                 (if
                  (i32.eqz
                   (get_global $hangLimit)
                  )
                  (return
                   (i32.const 1462849583)
                  )
                 )
                 (set_global $hangLimit
                  (i32.sub
                   (get_global $hangLimit)
                   (i32.const 1)
                  )
                 )
                )
                (block $label$13 (result i32)
                 (f32.store offset=3 align=2
                  (i32.and
                   (i32.const 421134925)
                   (i32.const 31)
                  )
                  (if (result f32)
                   (i32.eqz
                    (i32.const 255)
                   )
                   (f32.const 304027744)
                   (get_local $0)
                  )
                 )
                 (loop $label$14 (result i32)
                  (block
                   (if
                    (i32.eqz
                     (get_global $hangLimit)
                    )
                    (return
                     (i32.const -67108864)
                    )
                   )
                   (set_global $hangLimit
                    (i32.sub
                     (get_global $hangLimit)
                     (i32.const 1)
                    )
                   )
                  )
                  (i32.const 72)
                 )
                )
               )
              )
             )
            )
            (block $label$15 (result i32)
             (block $label$16
              (br_if $label$16
               (block $label$17 (result i32)
                (if
                 (i32.eqz
                  (i32.const 2097152)
                 )
                 (i32.store offset=1 align=1
                  (i32.and
                   (i32.const 536870912)
                   (i32.const 31)
                  )
                  (i32.const 1073741824)
                 )
                 (nop)
                )
                (if (result i32)
                 (i32.eqz
                  (i32.const -27)
                 )
                 (i32.const 1)
                 (i32.const -9)
                )
               )
              )
              (f32.store offset=2 align=2
               (i32.and
                (if (result i32)
                 (i32.eqz
                  (br_if $label$15
                   (i32.const 5)
                   (i32.const -2048)
                  )
                 )
                 (block $label$18 (result i32)
                  (br $label$16)
                 )
                 (block $label$19 (result i32)
                  (block $label$20
                   (nop)
                   (set_local $0
                    (if (result f32)
                     (i32.eqz
                      (i32.const 1)
                     )
                     (get_local $0)
                     (call $deNan32
                      (f32.max
                       (f32.const 889.3024291992188)
                       (f32.const 4.320995515717079e-37)
                      )
                     )
                    )
                   )
                  )
                  (br $label$16)
                 )
                )
                (i32.const 31)
               )
               (tee_local $0
                (call $deNan32
                 (select
                  (f32.const 6.480769254579855e-10)
                  (f32.const 18446744073709551615)
                  (select
                   (i32.const -1)
                   (i32.const 16)
                   (call_indirect $FUNCSIG$i
                    (i32.const 0)
                   )
                  )
                 )
                )
               )
              )
             )
             (call_indirect $FUNCSIG$i
              (i32.const 0)
             )
            )
           )
           (block $label$21 (result i32)
            (set_local $2
             (tee_local $2
              (get_local $1)
             )
            )
            (return
             (i32.const -1)
            )
           )
          )
          (i32.const 31)
         )
         (br_if $label$0
          (f32.ge
           (call $deNan32
            (f32.demote/f64
             (call $deNan64
              (select
               (get_local $1)
               (tee_local $1
                (get_local $2)
               )
               (br_if $label$0
                (i32.const 64)
                (i32.eqz
                 (i32.const 7198)
                )
               )
              )
             )
            )
           )
           (call $deNan32
            (f32.add
             (get_local $0)
             (if (result f32)
              (i32.const 1515803219)
              (f32.const -22)
              (block $label$30 (result f32)
               (block $label$31
                (nop)
                (nop)
               )
               (return
                (i32.const 1296450369)
               )
              )
             )
            )
           )
          )
          (i32.eqz
           (select
            (i32.atomic.load16_s offset=4
             (i32.and
              (if (result i32)
               (i32.div_u
                (call $func_2)
                (i32.load16_u offset=4 align=1
                 (i32.and
                  (i32.const 38733343)
                  (i32.const 31)
                 )
                )
               )
               (block $label$23 (result i32)
                (set_local $0
                 (loop $label$24 (result f32)
                  (block
                   (if
                    (i32.eqz
                     (get_global $hangLimit)
                    )
                    (return
                     (i32.const 20296)
                    )
                   )
                   (set_global $hangLimit
                    (i32.sub
                     (get_global $hangLimit)
                     (i32.const 1)
                    )
                   )
                  )
                  (get_local $0)
                 )
                )
                (call_indirect $FUNCSIG$i
                 (i32.const 0)
                )
               )
               (block $label$25 (result i32)
                (block $label$26
                 (f64.store offset=4
                  (i32.and
                   (i32.const 22548)
                   (i32.const 31)
                  )
                  (get_local $1)
                 )
                )
                (if (result i32)
                 (i32.eqz
                  (i32.const 32767)
                 )
                 (block $label$27 (result i32)
                  (nop)
                  (if (result i32)
                   (i32.const -32768)
                   (i32.const -51)
                   (i32.const -1073741824)
                  )
                 )
                 (block $label$28 (result i32)
                  (block $label$29
                   (i64.atomic.store16 offset=4
                    (i32.and
                     (call $func_1)
                     (i32.const 31)
                    )
                    (i64.const 126)
                   )
                   (nop)
                  )
                  (br_if $label$28
                   (i32.const 255)
                   (i32.eqz
                    (i32.const 88)
                   )
                  )
                 )
                )
               )
              )
              (i32.const 31)
             )
            )
            (call_indirect $FUNCSIG$i
             (i32.const 3)
            )
            (loop $label$22 (result i32)
             (block
              (if
               (i32.eqz
                (get_global $hangLimit)
               )
               (return
                (i32.const -94)
               )
              )
              (set_global $hangLimit
               (i32.sub
                (get_global $hangLimit)
                (i32.const 1)
               )
              )
             )
             (i32.eqz
              (call $func_1)
             )
            )
           )
          )
         )
         (br_if $label$0
          (i32.load8_u offset=4
           (br_if $label$0
            (i64.le_u
             (i64.const 16250)
             (i64.const -2147483648)
            )
            (i32.eqz
             (br_if $label$0
              (loop $label$43 (result i32)
               (block
                (if
                 (i32.eqz
                  (get_global $hangLimit)
                 )
                 (return
                  (i32.const 32)
                 )
                )
                (set_global $hangLimit
                 (i32.sub
                  (get_global $hangLimit)
                  (i32.const 1)
                 )
                )
               )
               (block (result i32)
                (f32.store offset=22 align=1
                 (i32.and
                  (i32.const 1549362240)
                  (i32.const 31)
                 )
                 (get_local $0)
                )
                (br_if $label$43
                 (i32.eqz
                  (block $label$44 (result i32)
                   (nop)
                   (block $label$45 (result i32)
                    (nop)
                    (i32.const 52123137)
                   )
                  )
                 )
                )
                (call $func_1)
               )
              )
              (i32.trunc_u/f64
               (call $deNan64
                (select
                 (get_local $2)
                 (get_local $1)
                 (i32.const 8)
                )
               )
              )
             )
            )
           )
          )
          (i32.eqz
           (f64.eq
            (f64.const 274877906944)
            (if (result f64)
             (f64.lt
              (if (result f64)
               (call_indirect $FUNCSIG$i
                (i32.const 1)
               )
               (block $label$32 (result f64)
                (drop
                 (if (result i32)
                  (i32.const 858208803)
                  (i32.const 30324)
                  (i32.const 65451)
                 )
                )
                (if (result f64)
                 (i32.eqz
                  (i32.const -268435456)
                 )
                 (call $deNan64
                  (f64.convert_u/i32
                   (i32.const 65452)
                  )
                 )
                 (get_local $2)
                )
               )
               (block $label$33 (result f64)
                (if
                 (block $label$34 (result i32)
                  (nop)
                  (i32.const 437805155)
                 )
                 (nop)
                 (set_local $0
                  (get_local $0)
                 )
                )
                (call $deNan64
                 (f64.min
                  (call $deNan64
                   (f64.promote/f32
                    (get_local $0)
                   )
                  )
                  (f64.const 7240)
                 )
                )
               )
              )
              (loop $label$35 (result f64)
               (block
                (if
                 (i32.eqz
                  (get_global $hangLimit)
                 )
                 (return
                  (i32.const -90)
                 )
                )
                (set_global $hangLimit
                 (i32.sub
                  (get_global $hangLimit)
                  (i32.const 1)
                 )
                )
               )
               (block $label$36 (result f64)
                (drop
                 (get_local $2)
                )
                (return
                 (i32.const 1970369147)
                )
               )
              )
             )
             (block $label$37 (result f64)
              (block $label$38
               (if
                (if (result i32)
                 (i32.eqz
                  (i32.const 514)
                 )
                 (loop $label$39 (result i32)
                  (block
                   (if
                    (i32.eqz
                     (get_global $hangLimit)
                    )
                    (return
                     (i32.const 0)
                    )
                   )
                   (set_global $hangLimit
                    (i32.sub
                     (get_global $hangLimit)
                     (i32.const 1)
                    )
                   )
                  )
                  (block (result i32)
                   (nop)
                   (br_if $label$39
                    (i32.eqz
                     (i32.const -21)
                    )
                   )
                   (i32.const 10)
                  )
                 )
                 (select
                  (i32.const 32)
                  (i32.const -7)
                  (i32.const 13)
                 )
                )
                (block $label$40
                 (nop)
                 (i32.store offset=4 align=1
                  (i32.and
                   (i32.const -1073741824)
                   (i32.const 31)
                  )
                  (i32.const 812988468)
                 )
                )
                (block $label$41
                 (nop)
                 (drop
                  (i64.const 128)
                 )
                )
               )
               (br_if $label$38
                (call_indirect $FUNCSIG$i
                 (i32.const 1)
                )
               )
              )
              (tee_local $1
               (f64.const -nan:0xfffffffffffeb)
              )
             )
             (call $deNan64
              (f64.sqrt
               (block $label$42 (result f64)
                (drop
                 (i64.const 127)
                )
                (return
                 (i32.const -91)
                )
               )
              )
             )
            )
           )
          )
         )
        )
       )
      )
      (i32.const 31)
     )
    )
   )
  )
 )
 (func $func_3 (type $FUNCSIG$vff) (param $0 f32) (param $1 f32)
  (local $2 f32)
  (block
   (if
    (i32.eqz
     (get_global $hangLimit)
    )
    (return)
   )
   (set_global $hangLimit
    (i32.sub
     (get_global $hangLimit)
     (i32.const 1)
    )
   )
  )
  (nop)
 )
 (func $func_4 (type $FUNCSIG$fj) (param $0 i64) (result f32)
  (local $1 f32)
  (local $2 i32)
  (local $3 f32)
  (local $4 f64)
  (local $5 i64)
  (block
   (if
    (i32.eqz
     (get_global $hangLimit)
    )
    (return
     (get_local $3)
    )
   )
   (set_global $hangLimit
    (i32.sub
     (get_global $hangLimit)
     (i32.const 1)
    )
   )
  )
  (block $label$0 (result f32)
   (block $label$1
    (call_indirect $FUNCSIG$vff
     (br_if $label$0
      (f32.const 1)
      (i32.eqz
       (block $label$2 (result i32)
        (call $func_3
         (br_if $label$0
          (f32.load offset=4 align=1
           (i32.and
            (wake
             (i32.and
              (get_local $2)
              (i32.const 31)
             )
             (tee_local $2
              (block $label$17 (result i32)
               (i64.le_u
                (i64.const -2)
                (i64.const -32768)
               )
              )
             )
            )
            (i32.const 31)
           )
          )
          (if (result i32)
           (i32.eqz
            (i32.trunc_s/f32
             (call $deNan32
              (f32.convert_s/i64
               (loop $label$3 (result i64)
                (block
                 (if
                  (i32.eqz
                   (get_global $hangLimit)
                  )
                  (return
                   (f32.const 1.1754943508222875e-38)
                  )
                 )
                 (set_global $hangLimit
                  (i32.sub
                   (get_global $hangLimit)
                   (i32.const 1)
                  )
                 )
                )
                (i64.const 128)
               )
              )
             )
            )
           )
           (block $label$4 (result i32)
            (if
             (i32.eqz
              (select
               (br_if $label$4
                (i32.const 1)
                (call_indirect $FUNCSIG$i
                 (i32.const 0)
                )
               )
               (block $label$6 (result i32)
                (set_local $4
                 (f64.const 1301466880673135803265612e44)
                )
                (br $label$1)
               )
               (block $label$5 (result i32)
                (set_local $1
                 (tee_local $1
                  (tee_local $1
                   (get_local $1)
                  )
                 )
                )
                (br $label$1)
               )
              )
             )
             (block $label$7
              (i32.atomic.store16 offset=3
               (i32.and
                (if (result i32)
                 (i32.eqz
                  (get_local $2)
                 )
                 (i32.const 1043086128)
                 (i32.const -96)
                )
                (i32.const 31)
               )
               (i32.trunc_s/f64
                (get_local $4)
               )
              )
              (block $label$8
               (call_indirect $FUNCSIG$vff
                (f32.load offset=4 align=2
                 (i32.and
                  (i32.const 343242608)
                  (i32.const 31)
                 )
                )
                (call $deNan32
                 (select
                  (get_local $3)
                  (f32.const 192.2549285888672)
                  (i32.const -66)
                 )
                )
                (i32.const 8)
               )
               (call_indirect $FUNCSIG$vff
                (get_local $3)
                (get_local $1)
                (i32.const 6)
               )
              )
             )
             (loop $label$9
              (block
               (if
                (i32.eqz
                 (get_global $hangLimit)
                )
                (return
                 (f32.const 18446744073709551615)
                )
               )
               (set_global $hangLimit
                (i32.sub
                 (get_global $hangLimit)
                 (i32.const 1)
                )
               )
              )
              (block
               (loop $label$10
                (block
                 (if
                  (i32.eqz
                   (get_global $hangLimit)
                  )
                  (return
                   (get_local $1)
                  )
                 )
                 (set_global $hangLimit
                  (i32.sub
                   (get_global $hangLimit)
                   (i32.const 1)
                  )
                 )
                )
                (set_local $2
                 (wake
                  (i32.and
                   (i32.const 1094337070)
                   (i32.const 31)
                  )
                  (i32.const 1)
                 )
                )
               )
               (br_if $label$9
                (i32.eqz
                 (if (result i32)
                  (i32.const -67108864)
                  (i32.const -92)
                  (i32.const 95)
                 )
                )
               )
               (call $func_3
                (get_local $3)
                (block $label$11 (result f32)
                 (return
                  (get_local $1)
                 )
                )
               )
              )
             )
            )
            (f64.gt
             (block $label$12 (result f64)
              (call $func_3
               (loop $label$13 (result f32)
                (block
                 (if
                  (i32.eqz
                   (get_global $hangLimit)
                  )
                  (return
                   (f32.const 15)
                  )
                 )
                 (set_global $hangLimit
                  (i32.sub
                   (get_global $hangLimit)
                   (i32.const 1)
                  )
                 )
                )
                (f32.const 2251799813685248)
               )
               (f32.const -nan:0x7fffef)
              )
              (return
               (get_local $3)
              )
             )
             (f64.const 268435456)
            )
           )
           (block $label$14 (result i32)
            (if
             (br_if $label$14
              (i32.const 1195918659)
              (i32.eqz
               (i32.const -16)
              )
             )
             (block $label$15
              (nop)
              (set_local $4
               (get_local $4)
              )
             )
             (block $label$16
              (nop)
              (br_if $label$1
               (get_local $2)
              )
             )
            )
            (br_if $label$2
             (tee_local $2
              (tee_local $2
               (i32.const 726283585)
              )
             )
             (get_local $2)
            )
           )
          )
         )
         (block $label$18 (result f32)
          (set_local $5
           (i64.load16_u offset=22
            (i32.and
             (i32.trunc_u/f64
              (get_local $4)
             )
             (i32.const 31)
            )
           )
          )
          (call $deNan32
           (f32.convert_u/i32
            (if (result i32)
             (i32.atomic.rmw16_u.cmpxchg offset=22
              (i32.and
               (get_local $2)
               (i32.const 31)
              )
              (wake
               (i32.and
                (i32.const -7)
                (i32.const 31)
               )
               (get_local $2)
              )
              (i32.const -32768)
             )
             (block $label$19 (result i32)
              (get_local $2)
             )
             (block $label$20 (result i32)
              (get_local $2)
             )
            )
           )
          )
         )
        )
        (i32.const 127)
       )
      )
     )
     (get_local $3)
     (i32.const 7)
    )
   )
   (get_local $1)
  )
 )
 (func $hangLimitInitializer
  (set_global $hangLimit
   (i32.const 100)
  )
 )
 (func $deNan32 (param $0 f32) (result f32)
  (if (result f32)
   (f32.eq
    (get_local $0)
    (get_local $0)
   )
   (get_local $0)
   (f32.const 0)
  )
 )
 (func $deNan64 (param $0 f64) (result f64)
  (if (result f64)
   (f64.eq
    (get_local $0)
    (get_local $0)
   )
   (get_local $0)
   (f64.const 0)
  )
 )
)
